{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LocationserviceService = /*#__PURE__*/(() => {\n  class LocationserviceService {\n    constructor(http) {\n      this.http = http;\n      this.httpHeaders = new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      });\n      this.options = {\n        headers: this.httpHeaders\n      };\n    }\n\n    getLocations() {\n      let location = this.http.get('http://localhost:8086/location/getLocations');\n      console.log(location);\n      return this.http.get('http://localhost:8086/location/getLocations');\n    }\n\n    removeLocation(locid) {\n      return this.http.delete(`http://localhost:8086/location/delete/${locid}`).pipe(catchError(this.errorHandler));\n    }\n\n    errorHandler(error) {\n      let errorMessage = \"\";\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n    addLocation(location) {\n      return this.http.post(`http://localhost:8086/location/addlocation`, JSON.stringify(location), this.options).pipe(catchError(this.errorHandler));\n    }\n\n    getLocationById(id) {\n      return this.http.get(`http://localhost:8086/location/getLocation/` + id).pipe(catchError(this.errorHandler));\n    }\n\n    updateLocation(id, location) {\n      return this.http.put(`http://localhost:8086/location/updateLocation/${id}`, location);\n    }\n\n  }\n\n  LocationserviceService.ɵfac = function LocationserviceService_Factory(t) {\n    return new (t || LocationserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LocationserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocationserviceService,\n    factory: LocationserviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocationserviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}